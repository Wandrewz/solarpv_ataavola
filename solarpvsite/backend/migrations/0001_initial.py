# Generated by Django 3.0.4 on 2020-04-02 13:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('certificatenumber', models.IntegerField(primary_key=True, serialize=False)),
                ('id', models.CharField(blank=True, db_column='ID', max_length=255, null=True)),
                ('reportnumber', models.CharField(blank=True, max_length=255, null=True)),
                ('issuedate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Certificate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('clientid', models.CharField(db_column='clientID', max_length=255, primary_key=True, serialize=False)),
                ('clientname', models.CharField(blank=True, max_length=255, null=True)),
                ('clienttype', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.CharField(db_column='locationID', max_length=255, primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('postalcode', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.IntegerField(blank=True, null=True)),
                ('faxnumber', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performancedata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maxsystemvoltage', models.IntegerField(blank=True, null=True)),
                ('voc', models.FloatField(blank=True, null=True)),
                ('isc', models.FloatField(blank=True, null=True)),
                ('vmp', models.FloatField(blank=True, null=True)),
                ('imp', models.FloatField(blank=True, null=True)),
                ('pmp', models.FloatField(blank=True, null=True)),
                ('ff', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PerformanceData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('modelnumber', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('productname', models.CharField(blank=True, max_length=255, null=True)),
                ('celltechnology', models.CharField(blank=True, max_length=255, null=True)),
                ('cellman', models.CharField(blank=True, max_length=255, null=True)),
                ('numcells', models.IntegerField(blank=True, null=True)),
                ('numcellsinseries', models.IntegerField(blank=True, null=True)),
                ('numseriesstrings', models.IntegerField(blank=True, null=True)),
                ('numdiodes', models.IntegerField(blank=True, null=True)),
                ('productlength', models.FloatField(blank=True, null=True)),
                ('productwidth', models.FloatField(blank=True, null=True)),
                ('productweight', models.FloatField(blank=True, null=True)),
                ('superstratetype', models.CharField(blank=True, max_length=255, null=True)),
                ('superstrateman', models.CharField(blank=True, max_length=255, null=True)),
                ('substratetype', models.CharField(blank=True, max_length=255, null=True)),
                ('substrateman', models.CharField(blank=True, max_length=255, null=True)),
                ('frametype', models.CharField(blank=True, max_length=255, null=True)),
                ('frameadhesive', models.CharField(blank=True, max_length=255, null=True)),
                ('encapsulanttype', models.CharField(blank=True, max_length=255, null=True)),
                ('encapsulantman', models.CharField(blank=True, max_length=255, null=True)),
                ('junctionboxtype', models.CharField(blank=True, max_length=255, null=True)),
                ('junctionboxman', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('serviceid', models.CharField(db_column='serviceID', max_length=255, primary_key=True, serialize=False)),
                ('servicename', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('isfirequired', models.CharField(blank=True, db_column='isFIrequired', max_length=3, null=True)),
                ('fifrequency', models.CharField(blank=True, db_column='FIfrequency', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testsequence',
            fields=[
                ('sequence_id', models.CharField(db_column='sequence_ID', max_length=255, primary_key=True, serialize=False)),
                ('sequence_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'TestSequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teststandard',
            fields=[
                ('standardid', models.CharField(db_column='standardID', max_length=255, primary_key=True, serialize=False)),
                ('standardname', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('publisheddate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TestStandard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.CharField(db_column='userID', max_length=255, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('jobtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('officephone', models.IntegerField(blank=True, null=True)),
                ('cellphone', models.IntegerField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
    ]
